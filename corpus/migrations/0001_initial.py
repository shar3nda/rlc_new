# Generated by Django 4.2.3 on 2023-07-23 12:19

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Author name")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=10,
                        verbose_name="Gender",
                    ),
                ),
                ("program", models.CharField(max_length=255, verbose_name="Program")),
                (
                    "language_background",
                    models.CharField(
                        choices=[("H", "Heritage"), ("F", "Foreign"), ("O", "Other")],
                        max_length=10,
                        verbose_name="Language background",
                    ),
                ),
                (
                    "dominant_language",
                    models.CharField(
                        choices=[
                            ("abk", "Abkhazian"),
                            ("aze", "Azerbaijani"),
                            ("alb", "Albanian"),
                            ("amh", "Amharic"),
                            ("eng", "English"),
                            ("ara", "Arabic"),
                            ("arm", "Armenian"),
                            ("ben", "Bengali"),
                            ("bul", "Bulgarian"),
                            ("hun", "Hungarian"),
                            ("vie", "Vietnamese"),
                            ("dut", "Dutch"),
                            ("gre", "Greek"),
                            ("geo", "Georgian"),
                            ("dag", "Daghestanian"),
                            ("dar", "Dari"),
                            ("heb", "Hebrew"),
                            ("ind", "Indonesian"),
                            ("spa", "Spanish"),
                            ("ita", "Italian"),
                            ("kaz", "Kazakh"),
                            ("chi", "Chinese"),
                            ("kor", "Korean"),
                            ("kur", "Kurdish"),
                            ("khm", "Khmer"),
                            ("lao", "Lao"),
                            ("mac", "Macedonian"),
                            ("mon", "Mongolian"),
                            ("ger", "German"),
                            ("nep", "Nepali"),
                            ("nor", "Norwegian"),
                            ("por", "Portuguese"),
                            ("pas", "Pashto"),
                            ("rom", "Romanian"),
                            ("ser", "Serbian"),
                            ("svk", "Slovak"),
                            ("slo", "Slovenian"),
                            ("taj", "Tajik"),
                            ("tha", "Thai"),
                            ("tur", "Turkish"),
                            ("turkmen", "Turkmen"),
                            ("uzb", "Uzbek"),
                            ("urd", "Urdu"),
                            ("far", "Farsi"),
                            ("fin", "Finnish"),
                            ("fr", "French"),
                            ("hin", "Hindi"),
                            ("cro", "Croatian"),
                            ("sho", "Czech"),
                            ("swe", "Swedish"),
                            ("shona", "Shona"),
                            ("est", "Estonian"),
                            ("jap", "Japanese"),
                        ],
                        db_index=True,
                        default="eng",
                        max_length=10,
                        null=True,
                        verbose_name="Dominant language",
                    ),
                ),
                (
                    "favorite",
                    models.BooleanField(default=False, verbose_name="Favourites"),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Source"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created on"),
                ),
                (
                    "date",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Written in"
                    ),
                ),
                (
                    "genre",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("answers", "Answers to questions"),
                            ("nonacademic", "Non–academic essay"),
                            ("academic", "Academic essay"),
                            ("blog", "Blog"),
                            ("letter", "Letter"),
                            ("story", "Story"),
                            ("paraphrase", "Paraphrase"),
                            ("definition", "Definition"),
                            ("bio", "Biography"),
                            ("description", "Description"),
                            ("summary", "Summary"),
                            ("other", "Other"),
                        ],
                        db_index=True,
                        default="other",
                        max_length=100,
                        null=True,
                        verbose_name="Genre",
                    ),
                ),
                (
                    "language_level",
                    models.CharField(
                        choices=[
                            ("NOV", "Novice"),
                            ("NL", "Novice Low"),
                            ("NM", "Novice Middle"),
                            ("NH", "Novice High"),
                            ("A1", "A1"),
                            ("A2", "A2"),
                            ("INT", "Intermediate"),
                            ("IL", "Intermediate Low"),
                            ("IM", "Intermediate Middle"),
                            ("IH", "Intermediate High"),
                            ("B1", "B1"),
                            ("B2", "B2"),
                            ("ADV", "Advanced"),
                            ("AL", "Advanced Low"),
                            ("AM", "Advanced Middle"),
                            ("AH", "Advanced High"),
                            ("C1", "C1"),
                            ("C2", "C2"),
                            ("UNK", "Unknown"),
                        ],
                        db_index=True,
                        max_length=10,
                        null=True,
                        verbose_name="Language level",
                    ),
                ),
                (
                    "subcorpus",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("HSE", "HSE"),
                            ("UNICE", "UNICE"),
                            ("RULEC", "RULEC"),
                            ("FIN", "FIN"),
                            ("BERLIN", "BERLIN"),
                            ("TOKYO", "TOKYO"),
                            ("SFEDU", "SFEDU"),
                        ],
                        db_index=True,
                        default="HSE",
                        max_length=10,
                        null=True,
                        verbose_name="Subcorpus",
                    ),
                ),
                ("body", models.TextField(verbose_name="Text")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "New"), (1, "Annotated"), (2, "Checked")],
                        default=0,
                        verbose_name="Status",
                    ),
                ),
                (
                    "time_limit",
                    models.BooleanField(default=False, verbose_name="Time limit"),
                ),
                ("oral", models.BooleanField(default=False, verbose_name="Oral")),
                (
                    "annotators",
                    models.ManyToManyField(
                        blank=True,
                        related_name="annotated_documents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Annotators",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corpus.author",
                        verbose_name="Author",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="Sentence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Text")),
                (
                    "markup",
                    models.TextField(blank=True, null=True, verbose_name="Markup"),
                ),
                ("number", models.IntegerField(verbose_name="Position in text")),
                (
                    "lemmas",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corpus.document",
                        verbose_name="Document",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(db_index=True, max_length=200)),
                ("start", models.IntegerField(blank=True, null=True)),
                ("end", models.IntegerField(blank=True, null=True)),
                ("number", models.IntegerField(blank=True, null=True)),
                (
                    "pos",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ADJ", "ADJ"),
                            ("ADP", "ADP"),
                            ("ADV", "ADV"),
                            ("AUX", "AUX"),
                            ("CCONJ", "CCONJ"),
                            ("DET", "DET"),
                            ("INTJ", "INTJ"),
                            ("NOUN", "NOUN"),
                            ("NUM", "NUM"),
                            ("PART", "PART"),
                            ("PRON", "PRON"),
                            ("PROPN", "PROPN"),
                            ("PUNCT", "PUNCT"),
                            ("SCONJ", "SCONJ"),
                            ("SYM", "SYM"),
                            ("VERB", "VERB"),
                            ("X", "X"),
                        ],
                        db_index=True,
                        max_length=10,
                        null=True,
                    ),
                ),
                ("lemma", models.CharField(blank=True, db_index=True, null=True)),
                (
                    "animacy",
                    models.CharField(
                        blank=True,
                        choices=[("Anim", "Anim"), ("Inan", "Inan")],
                        db_index=True,
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "aspect",
                    models.CharField(
                        blank=True,
                        choices=[("Imp", "Imp"), ("Perf", "Perf")],
                        db_index=True,
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "case",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Acc", "Acc"),
                            ("Dat", "Dat"),
                            ("Gen", "Gen"),
                            ("Ins", "Ins"),
                            ("Loc", "Loc"),
                            ("Nom", "Nom"),
                            ("Par", "Par"),
                            ("Voc", "Voc"),
                        ],
                        db_index=True,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "degree",
                    models.CharField(
                        blank=True,
                        choices=[("Cmp", "Cmp"), ("Pos", "Pos"), ("Sup", "Sup")],
                        db_index=True,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "foreign",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes")],
                        db_index=True,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Fem", "Fem"), ("Masc", "Masc"), ("Neut", "Neut")],
                        db_index=True,
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "hyph",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes")],
                        db_index=True,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "mood",
                    models.CharField(
                        blank=True,
                        choices=[("Cnd", "Cnd"), ("Imp", "Imp"), ("Ind", "Ind")],
                        db_index=True,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "gram_number",
                    models.CharField(
                        blank=True,
                        choices=[("Plur", "Plur"), ("Sing", "Sing")],
                        db_index=True,
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "person",
                    models.CharField(
                        blank=True,
                        choices=[("1", "1"), ("2", "2"), ("3", "3")],
                        db_index=True,
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "polarity",
                    models.CharField(
                        blank=True,
                        choices=[("Neg", "Neg")],
                        db_index=True,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "tense",
                    models.CharField(
                        blank=True,
                        choices=[("Fut", "Fut"), ("Past", "Past"), ("Pres", "Pres")],
                        db_index=True,
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "variant",
                    models.CharField(
                        blank=True,
                        choices=[("Short", "Short")],
                        db_index=True,
                        max_length=5,
                        null=True,
                    ),
                ),
                (
                    "verb_form",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Conv", "Conv"),
                            ("Fin", "Fin"),
                            ("Inf", "Inf"),
                            ("Part", "Part"),
                        ],
                        db_index=True,
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "voice",
                    models.CharField(
                        blank=True,
                        choices=[("Act", "Act"), ("Mid", "Mid"), ("Pass", "Pass")],
                        db_index=True,
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corpus.document",
                    ),
                ),
                (
                    "sentence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corpus.sentence",
                    ),
                ),
            ],
            options={
                "verbose_name": "token",
                "verbose_name_plural": "tokens",
            },
        ),
        migrations.CreateModel(
            name="Annotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "guid",
                    models.CharField(
                        db_index=True,
                        editable=False,
                        max_length=64,
                        unique=True,
                        verbose_name="GUID",
                    ),
                ),
                ("json", models.JSONField(verbose_name="JSON")),
                (
                    "alt",
                    models.BooleanField(default=False, verbose_name="Альтернативная"),
                ),
                ("orig_text", models.TextField(verbose_name="Original text")),
                ("start", models.IntegerField(verbose_name="Start")),
                ("end", models.IntegerField(verbose_name="End")),
                (
                    "error_tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=64),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Error tags",
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corpus.document",
                        verbose_name="Document",
                    ),
                ),
                (
                    "sentence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corpus.sentence",
                        verbose_name="Sentence",
                    ),
                ),
                (
                    "tokens",
                    models.ManyToManyField(
                        blank=True, to="corpus.token", verbose_name="Tokens"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
        ),
    ]
